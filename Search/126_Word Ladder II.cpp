//关键词:广度优先搜索bfs, 回溯法Backtracking,哈希表（set,map)构建映射,size_t
/*
思路：
将每个单词想象成一个点，每2个单词若可以通过换一个字母来互相转换，他们之间有一条双向边，如此形成一张图。
然后以beginword为起点运用BFS一直找到enword.
算法实现：
1.首先建立一个单词映射，把wordlist中所有的单词都包含其中，若endword不在其中则无解返回空。
2.再建立一个单词映射，将映射中的单词两两匹配，检查他们2是否可以通过只换一个字母来互相转换，若可以建立双向边。
3.设立一个数组，储存起始点到某一点的代价。
4.将起点加入队列开始BFS,队列中每一个节点保存从起点开始所有的路径
5.这样队列中每个取出的节点都是一个数组，数组中最后一个元素为当前路径的最后节点
  - 若最后节点为终点，存为答案。
  - 若最后节点非重点，则找到和他联通，代价又大于他的节点，将该节点加入到队列中去。
6.最后用回溯法重建所有可能路径
7.由于本题起点和终点固定，所以可以从起点和终点同时开始双向BFS，大约缩小一半时间
*/
